#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass book
\begin_preamble
% Using a custom title page, \title required
\title{}

% PDF Generation settings
\hypersetup{
    pdfstartview={FitH},
    linkcolor=black,
    citecolor=black,
    filecolor=blue,
    urlcolor=blue,
    linktoc=all
}

% Remove page numbering from the TOC
\addtocontents{toc}{
 \protect \thispagestyle{empty}
}
\end_preamble
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language magyar
\language_package default
\inputencoding auto
\fontencoding global
\font_roman times
\font_sans helvet
\font_typewriter courier
\font_default_family sfdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format pdf2
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing onehalf
\use_hyperref true
\pdf_title "Drive Testing szakdolgozat"
\pdf_author "Specker Zsolt"
\pdf_bookmarks false
\pdf_bookmarksnumbered true
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 4
\pdf_breaklinks true
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize a4paper
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3.5cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\secnumdepth 2
\tocdepth 2
\paragraph_separation skip
\defskip smallskip
\quotes_language swedish
\papercolumns 1
\papersides 2
\paperpagestyle plain
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Kedves dokumentum felhasználó! Ezt a sablon dokumentumot az ELTE IKs szakdolgoza
t-dokumentációd megírásának megkönnyítéséért adom.
 Bárki felhasználhatja, átalakíthatja szabadon.
 A dokumentum elkészítéséhez használd a 
\begin_inset Quotes sld
\end_inset

szemecskés
\begin_inset Quotes srd
\end_inset

 ikont (Nézet, Ctrl+R).
 Ajánlott fordítási formátum: pdflatex.
\end_layout

\begin_layout Plain Layout
Az alábbiakban írok pár megjegyzést a munkád segítéséhez!
\end_layout

\begin_layout Itemize
Ajánlott átnézni a Dokumentum -> Beállítások...
 menüpontot a dokumentum szinte bármely tulajdonságának állításához, pl:
\end_layout

\begin_deeper
\begin_layout Itemize
Egy/kétoldalasság megváltoztatása: Dokumentum -> Beállítások...
 -> Oldal formátum -> Kétoldalas dokumentum
\end_layout

\end_deeper
\begin_layout Itemize
Hivatkozások hozzáadása:
\end_layout

\begin_deeper
\begin_layout Itemize
A hivatkozás céljánál Beszúrás -> Címke...
\end_layout

\begin_layout Itemize
A hivatkozás helyén Beszúrás -> Kereszthivatkozás...
 (formátumként kiválasztani a hivatkozás szövegstílusát is)
\end_layout

\end_deeper
\begin_layout Itemize
Ábrák ajánlott hozzáadása:
\end_layout

\begin_deeper
\begin_layout Itemize
Beszúrás -> Úsztatás -> Ábra
\end_layout

\begin_layout Itemize
A keret felső részére a kép beszúrása
\end_layout

\begin_layout Itemize
A keret-beli alsó keretbe az ábra nevének begépelése
\end_layout

\end_deeper
\begin_layout Itemize
Vektorgrafikus képek (pl UML modellek) optimális hozzáadása:
\end_layout

\begin_deeper
\begin_layout Itemize
Nyomtasd ki a programból a képet egy PDF nyomtatóval
\end_layout

\begin_layout Itemize
Konvertáld a képet PDF-ből EPS-re egy internetes szolgáltatás segítségével
 (ha lehet, ASCII és level 3-as, beágyazott betűtipusú formátumba)
\end_layout

\begin_layout Itemize
Beszúrás -> Képek
\end_layout

\begin_layout Itemize
Állíts be vágást a fehér részek eltüntetéséhez, 100% sorszélességet az oldalhoz
 állításhoz
\end_layout

\end_deeper
\begin_layout Itemize
Index kitöltése: Ha látsz egy szót amit az indexhez akarsz adni, Beszúrás
 -> Tárgyszó
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% Document front matter settings
\end_layout

\begin_layout Plain Layout


\backslash
frontmatter              % Starts front matter
\end_layout

\begin_layout Plain Layout


\backslash
pagestyle{empty}         % Removes page numbering (this needs to be reset
 in main matter)
\end_layout

\begin_layout Plain Layout


\backslash
begin{titlepage}         % Starts the custom title page
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features tabularvalignment="middle" tabularwidth="100col%">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0pt">
<row interlinespace="2mm">
<cell multirow="3" alignment="center" valignment="middle" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\begin_inset Graphics
	filename ELTE_logo.eps
	lyxscale 15
	width 3.5cm

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row interlinespace="2mm">
<cell multirow="4" alignment="center" valignment="middle" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series bold
EÖTVÖS LORÁND TUDOMÁNYEGYETEM
\end_layout

\end_inset
</cell>
</row>
<row interlinespace="2mm">
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series bold
INFORMATIKAI KAR
\end_layout

\end_inset
</cell>
</row>
<row bottomspace="3mm" interlinespace="2mm">
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series bold
Programozáselmélet és Szoftvertechnológiai Tanszék
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "100col%"
height "0.2mm"

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
\align center

\series bold
\size largest
Drive testing Androiddal
\end_layout

\begin_layout Standard
\align center
\begin_inset VSpace 6em
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features tabularvalignment="middle" tabularwidth="100col%">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size large
Sike Sándor
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size large
Specker Zsolt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size large
ELTE IK Programozáselmélet és
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size large
ELTE IK Programtervező
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size large
Szoftvertechnológiai Tanszék
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size large
Informatikus BSc
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size large
Dósa István
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size large
Ericsson Hungary, 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
\align center

\size large
Budapest, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
the
\backslash
year
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% Ends the custom title page
\end_layout

\begin_layout Plain Layout


\backslash
end{titlepage}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage cleardoublepage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% Document main matter start
\end_layout

\begin_layout Plain Layout


\backslash
mainmatter
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage cleardoublepage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% Resets the empty front matter page style to plain
\end_layout

\begin_layout Plain Layout

% Change this if an other style's prefered
\end_layout

\begin_layout Plain Layout


\backslash
pagestyle{plain}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Bevezetés
\end_layout

\begin_layout Section
Probléma leírása
\end_layout

\begin_layout Standard
A drive testing egyfajta mérési módszere és értékelése a mobiltelefon hálózatok
 lefedettségének, kapacitásának és minőségének.
 Ez a teszt fontos szerepet kap a telefonhálózatokat üzemeltető cégek hálózat
 tervezési, üzemeltetési stratégiáiban és nem utolsó sorban a hibák felderítéséb
en.
 Drive test felszerelés tipikusan ilyen adatokat gyűjt a hálózatról:
\end_layout

\begin_layout Itemize
Jel intenzitás, erősség 
\end_layout

\begin_layout Itemize
Elutasított hívások
\end_layout

\begin_layout Itemize
Blokkolt hívások
\end_layout

\begin_layout Itemize
Handover információk 
\end_layout

\begin_layout Itemize
Szomszédos cella információk
\end_layout

\begin_layout Standard
\noindent
\begin_inset Wrap figure
lines 0
placement r
overhang 0in
width "40text%"
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Drive-Test-System.jpg
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Caption

\begin_layout Plain Layout

\size small
Drive Test felszerelés
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
A manapság használt megoldások nagyon költségesek a drága eszközök és szakembere
k miatt.
 A mérés során a teszter -aki általában egy mérnök- egy speciálisan felszerelt
 autóval kivonul a megadott területre, ahol a tesztet el kell végeznie.
 Majd bekonfigurálja az eszközöket a méréshez.
 Egy egyszerűbb felszerelés látható a jobb oldali képen.
 A mérés típusától függöen egyre bonyolultabb és költségesebb eszközökre,
 felszerelésekre van szükség.
 Majd az autóval végigjárja a kijelölt útvonalat, akár többször is, miközben
 a mérési eredményeket rögzíti a számítógép.
 A mérés végeztével kiértékeli az eredményeket, általában egy erre a célra
 készült program segítségével.
 Látható, hogy sok költséges, speciális eszközre van szükség a mérések elvégzésé
hez.
 
\end_layout

\begin_layout Section
Szakdolgozat célja
\end_layout

\begin_layout Standard
A szakdolgozatom célja egy 
\begin_inset Quotes sld
\end_inset

drive testing" alkalmazás megvalósítása, egy kis költségvetésű mobil egység
 segítségével.
 Nagy előnye a programnak a meglévő mérésekkel szemben, hogy a teszt elvégzéséhe
zelég egy mobiltelefon készülék.
 Az Android platform lehetőséget nyújt arra, hogy az alkalmazás információkat
 gyűjtsön a telefonról, valamint a mobilhálózatról.
 Ezen információk segítségével egy olyan program készíthető, amely képes
 részben vagy teljesen kiváltani a jelenleg használt eljárásokat.
 Segítséget nyújt a telefonhálózat problémáinak felderítésében, fejlesztendő
 területek feltérképezésében.
 
\end_layout

\begin_layout Standard
\begin_inset Wrap figure
lines 0
placement l
overhang 0in
width "70col%"
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename globalDataTraffic.jpg

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Mobil adatforgalom 2012-2017
\end_layout

\end_inset


\end_layout

\end_inset

Kimutatások szerint egyre növekszik a mobilhálózatok adatforgalma és 2017-re
 elérheti a havi 11,2 exabájtnyi mennyiséget.
 A mobil készülékek fejlődésével teret hódítanak a különféle szolgáltatások,
 mint a video telefonálás, internetes böngészés, stb.
 melyek növelik az adatforgalmat.
 A felhasználók gyakrabban használják ezeket a szolgáltatásokat, mint a
 hagyományos hanghívást.
 Így a szolgáltatóknak is alkalmazdniuk kell a megváltozott igényekhez,
 biztositaniuk kell a nagyobb lefedettséget és megbizható, gyors adatátvitelt.
 
\end_layout

\begin_layout Chapter
Felhasználói dokumentáció
\end_layout

\begin_layout Standard
A Felhasználói dokumentáció tartalmazza
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
- a megoldott probléma rövid megfogalmazását,
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
- a felhasznált módszerek rövid leírását,
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
- a program használatához szükséges összes információt.
\end_layout

\begin_layout Section
Program bemutatása
\end_layout

\begin_layout Standard
A program céljának leírása a felhasználó(k) szemszögéből.
 A célközönség bemutatása (mobil felhasználó, operátor)
\end_layout

\begin_layout Subsection
Program használatának feltételei
\end_layout

\begin_layout Standard
A program által használt interfészek, eszközök(HW, SW) leírása
\end_layout

\begin_layout Section
Program használatának bemutatása
\end_layout

\begin_layout Subsection
Program telepítése
\end_layout

\begin_layout Standard
nem lesz elérhető a market-ről, így a felmásolás és telepítés lépéseit fogom
 leírni
\end_layout

\begin_layout Subsection
Menü áttekintése
\end_layout

\begin_layout Standard
A menüpontok leírása, funkcionalitásaik ismertetése, beállítások ismertetése
 képekkel illusztrálva.
 Menüpontok (Activity-k) közti váltás módjának, módjainak leírása
\end_layout

\begin_layout Subsection
Teszt típusok ismertetése
\end_layout

\begin_layout Standard
Tesztek bemutatása (UDP, TCP, gyors teszt stb.) tesztek működésének ismertetése
\end_layout

\begin_layout Subsection
Teszt futtatása
\end_layout

\begin_layout Standard
tesztek futtatásának leírása, eredmények értelmezésének, mentésének leírása,
 képekkel illusztrálva
\end_layout

\begin_layout Subsection
Hibaüzenetek
\end_layout

\begin_layout Standard
mikor jelez a program hibát és mit tegyen a felhasználó ha ilyennel találkozik
 (pl.
 nem elérhető a GPS szolgáltatás, stb.)
\end_layout

\begin_layout Chapter
Fejlesztői dokumentáció
\end_layout

\begin_layout Section
Mobilhálózatok bemutatása
\end_layout

\begin_layout Subsubsection*

\series bold
Mobil hálózat kezdete, története
\end_layout

\begin_layout Standard
Már a második világháborúban képesek voltak rádió telefonos kapcsolatot
 kiépíteni katonai használatra.
 Kézi rádió adó-vevők már az 1940-es évektől elérhetőek voltak, pár telefon
 társaságnak volt gépkocsiban is használható mobil telefon készüléke.
 A korai készülékek testesek voltak és sok áramot fogyasztottak, a hálózat
 pedig csak néhány szimultán beszélgetést tudott csak kiszolgálni.
 
\begin_inset Wrap figure
lines 0
placement o
overhang 0col%
width "50col%"
status open

\begin_layout Plain Layout
\noindent
\align right
\begin_inset Graphics
	filename 621px-Mobile_radio_telephone.jpg
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Első mobil telefonok egyike
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset

Az egyesült államokbeli Bell laboratórium mérnökei olyan rendszeren dolgoztak,
 ami képessé teszi a mobil felhasználókat hívások kezdeményezésére és fogadására
 akár az autójukból.
 Az AT&T vállalat 1947 megalkotta az első mobil telefon hálozatot a Mobile
 Telephone Service-t (MTS).
 5,000 ügyféle volt és körülbelül heti 30 000 hívást bonyolítottak rajta.
 A cella technológia bevezetése lehetővé tette a frekvenciák sokszori ujrahaszno
sítását kis szomszédos területeken, melyeket alacsony teljesítményű adók
 segítségével fedtek le.
 Ez lehetővé tette gazdaságilag megvalósítható moódon a mobil telefonok
 széles körben való elterjedését.
\end_layout

\begin_layout Standard
A mobil telefonok fejlődése jól nyomon követhető az egymást követő generációkon,
 a korai "0G" szolgáltatásokon keresztül (MTS) az első generációs (1G) analóg
 cellás hálózatok és második generációs (2G) digitális mobil hálózatokon
 át a harmadik generációs (3G) szélessávú adat szolgáltatásokig.
 Napjainkban fejlődnek és egyre inkább elterjednek a negyedik generációs
 (4G) native-IP hálózatok.
\end_layout

\begin_layout Subsubsection*

\series bold
Cellák koncepciója
\end_layout

\begin_layout Standard
1947-ben Douglas H.
 Ring és W.
 Rae Young a Bell laboratórium mérnökei egy javasolták a hatszögletü cellák
 használatát a mobil hálozatokban.
 Akkoriban ez még nem volt megvalósítható csupán két évtizeddel később mikor
 Richard H.
 Frenkiel, Joel S.
 Engel és Philip T.
 Porter mérnökök kiterjesztették a korai javaslatot és egy sokkal részletesebb
 tervet dolgoztak ki.
 Porter volt, aki előszőr javasolta, hogy az adótornyok használják a már
 jólismert irányított antennákat, anak érdekében, hogy redukálják ay interferenc
iát és növeljék a csatornák újrahasznosíthatóságát.
\begin_inset Wrap figure
lines 0
placement o
overhang 0in
width "50col%"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Transmitting_tower_top_us.jpg
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Többirányú mobilhálózati antenna
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ezekben a korai időkbena mobil készüléknek az adótorony által lefedett körzetben
 kellett maradnia, ahhoz hogy sztolgáltatás folyamatos maradjon, vagyis
 a szolgáltatás nem volt foyltonos, átjárható az egyes cellák között.
 A koncepciók, mint a frekvencia újrahasználás és az átadás (handoff vagy
 handover) számos új mobiltelefon hálózati koncepciók alapját képezték.
 1970-ben Amos E.
 Joel Bell Laboratórium mérnöke feltalálta a három oldalú antennát, hogy
 segítse a hívások átadásának folyamatát egyik cellából a másikba.
\end_layout

\begin_layout Subsection
Mobilhálózatokban használt kifejezések leírása
\end_layout

\begin_layout Subsubsection*

\series bold
Hozzáférési Technológiák
\end_layout

\begin_layout Standard

\series bold
FDMA
\series default
: Frequency Division Multiple Access a leggyakoribb analóg rendszer.
 Ez a technika a spektrum frekvencia tartományokra való feldarabolásán alapszik
 és egy frekvencia sávot allokál egy felhasználóhoz.
 Egy csatornát egy időben csak egy előfizető használhat.
 Egy csatorna így lezárul a beszélgetés idejére más felhasználók elől, amíg
 le nem teszik, vagy át nem adódik a beszélgetés egy másik csatornára.
 A "full-duplex" FDMA átvitelnek két csatornára van szüksége, egy az adatok
 küldésére és egy másik a fogadására.
 FDMA technikát az első generációs analóg rendszerekben használták.
\end_layout

\begin_layout Standard

\series bold
TDMA
\series default
: Time Division Multiple Access nagyobb kapacitásra volt képes, mert az
 egyes frekvenciákat időszeletekre (time slot) osztotta.
 TDMA rendszerben a felhasználók az egész frekvencia tartományt használhatták,
 több felhasználó osztozott ugyanazon a frekvencia csatornán amiből egy-egy
 időszeletet kaptak.
 TDMA a második generációs mobil hálózatok domináns technológiája.
\end_layout

\begin_layout Standard

\series bold
CDMA
\series default
: Code Division Multiple Access szórt spektrumú technológián alapul.
 Titkosított adat átvitelt is lehetővé tette, ezért régóta használják katonai
 célokra.
 CDMA megnövelte a spektrum teljesítő képességét azzal, hogy a felhasználók
 az összes csatornát használhatják egy időben.
 Az adások az egész hullámsávot kihasználják, és minden hang vagy adat híváshoz
 egy egyedi kód tartozik, ami megkülönböztethetővé teszi egymástól a hívásokat.
 
\end_layout

\begin_layout Subsubsection*

\series bold
Mobil hálózati szabványok
\end_layout

\begin_layout Standard

\series bold
PSTN
\series default
 (Public Switched Telephone Network) nyilvános vonalkapcsolt telefon hálózat.
 Telefon vezetékek, optikai kábelek, mikrohullámú átviteli állomások, kommunikác
iós műholdak és tengeralatti telefon kábelekkötik össze a kapcsolási központokat
, hogy bármely telefon készülékkel fel vehessük a kapcoslatot a világon.
 Eredetileg a hálózat analóg, vezetékes telefon rendszer volt, PSTN majdnem
 telejesen digitális, mobil és vezetékes telefonokat is tartalmaz.Egyetlen
 globális címtartománya van a telefonszámoknak, melyet a E.163 és E.164 szabványok
 irnak le.
 Az összekapcoslt hálózatok és az egységes számozásnak köszönhetően bármely
 telefonról hívható bármely másik készülék.
\end_layout

\begin_layout Standard

\series bold
GSM 
\series default
(Global System for Mobile communication): az ETSI (European Telecommunications
 Standards Institute) dolgozta ki ezt a szabványt a második generációs (2G)
 mobil hálózati protokollok leírására.
 A GSM sztenderd váltotta le az első generációs (1G) analóg hálózatot, és
 egy új, digitális, teljes kétirányú kommunikációt lehetővé tevő, vonalkapcsolt
 hálózat bevezetésével.
 Ezt később kiegészitették azzal, hogy belevették az adat kommunikációt
 is a szabványba, először vonalkapcsolt átvitellel, majd csomagkapcsolt
 átvitellel: GPRS (General Packet Radio Services) és EDGE (Enhanced Data
 rates for GSM Evolution vagy EGPRS).
\end_layout

\begin_layout Standard

\series bold
GPRS 
\series default
(General Packet Radio Service): csomagkapcsolt szolgáltatás 2G és 3G kommunikáci
ós rendszerekben.
 A GPRS-t az ETSI szabványosította, napjainkban a 3GPP (3rd Generation Partnersh
ip Project) tartja karban a szabványt.
 A GPRS szolgáltatás jellemzője a változó teljesítmény és késés, melyek
 mértéke rendszert egyidejűleg használók számától függ.
 A vonal kapcsolt rendszerrel ellentétben, ahol szolgáltatás minősége(Quality
 of Service) biztositott a kapcsolat ideje alatt.
 2G-s rendszerben a GPRS által biztosított adatráta 56–114 kbit/s.
 A 2G és GPRS technológiák kombinációját néha 2.5G-nek szokták hívni, ami
 a 2G és a 3G mobil technológiák között helyezkedik el.
 Mérsékelt sebességű adat átvitelt biztosít a GSM rendszerben eddig kihasználatl
an több csatornás idő osztásos (TDMA: Time division multiple acces) technológia
 segítségével.
\end_layout

\begin_layout Standard

\series bold
EDGE
\series default
 (Enhanced Data rates for GSM Evolution): másnéven EGPRS (Enhanced GPRS)
 mobil telefon technológia, ami nagyobb adat átviteli sebességet tesz lehetővé.
 EDGE a 2003 év elején került bevezetésre a GSM hálózatokban.A 3GPP szabványosíto
tta és GSM család részévé vált.
 Kifinomult kódolási eljárások bevezetésének köszönhetően megnőtt a rádió
 csatornánként elérhető bitráta, háromszoros kapacitás és teljesítmény beli
 növekedést eredményezett a hagyományos GSM/GPRS kapcsolathoz képest.
 A továbbfejlesztett EDGE kisebb késést és több mint kétszeres teljesítmény
 növekedést biztosít.
 A legnagyobb bitráta elérheti a 1Mbit/s-ot, átlagosan pedig a 400kbit/s-ot.
\end_layout

\begin_layout Standard

\series bold
W-CDMA
\series default
 (Wideband Code Division Multiple Access) egy 3G mobil hálózati rádiós interfész
 sztenderd.
 A leggyakrabban használt tagja az Universal Mobile Telecommunications System
 (UMTS) családnak és néha az UMTS szinonímájaként használják.
 A DS-CDMA csatorna hozzáférési és FDD duplex módszereket alkalmazza, hogy
 nagyobb sebességre legyen képes és több felhasználót tudjon kiszolgálni
 a TDMA and TDD (time division duplex) rendszerekhez képest.
 Ugyanazt a központi hálózatot hasnzálja, mint a 2G GSM hálózat.
 
\end_layout

\begin_layout Standard
Code Division Multiple Access kommunikációs hálózat sok cég közremüködésével
 jött létre, de a CDMA (inkább W-CDMA) cellás telefon hálózat fejlesztésében
 a Qualcomm dominált.
 Qualcomm volt az első cég, akinek sikerült alkalmazható és kötséghatékony
 megoldást találnia: ez volt a korai IS-95 rádió interface sztenderd, melyből
 a CDMA2000 (IS-856/IS-2000) fejlődött ki.
 CDMA2000 hálózatok széleskörben elterjedtek különösen Amerikában.
 Azonban az eltérő követelmények és felépítés megakadályozta a globális
 elterjedését.
 A a meglévő rádiós interfészekkel való inkompatibilitás és a nagy költséggel
 járó fejleszthetőség ellenére a W-CDMA egy meghatározó szabvánnyá vált.
\end_layout

\begin_layout Standard
A W-CDMA egy pár 5 MHz széles rádió csatornát használ, míg a CDMA2000 egy
 vagy több pár 1.25 MHz radió csatornát.
 Habár a W-CDMA szintén CDMA átviteli technikát alaklamaz akár a CDMA2000,
 a W-CDMA nem egyszerüen egy széles sávú verziója a CDMA2000-nak.
 Mérnöki szempontból a W-CDMA különböző optimalizálási lehetőséget nyújt
 költség, kapacitás, teljesítmény,és tömörség között.
 Jobban telepíthető Európa és Ázsia sűrün lakott városaiba.
 Specifikációk egész halmazát tartalmazza, melyek részletesen definiálják
 a protokolokat, hogy hogyan komunikáljanak a készülékek a tornyokkal, hogyan
 kell modulálni a szignálokat, hogy kell az adatokat strukturálni stb.
\end_layout

\begin_layout Standard

\series bold
UMTS
\series default
 (The Universal Mobile Telecommunications System) harmadik generációs mobil
 hálózati rendszer.
 A 3GPP (3rd Generation Partnership Project) fejlesztette ki és tartja karban.
 W-CDMA hozzáférési technológiát használ a jobb hálózat kihasználtság és
 sávszélesség miatt.
 UMTS specifikál egy teljes hálózati rendszert, melybe beletartozik a hozzáférés
i hálózat (UMTS Terrestrial Radio Access Network, UTRAN), a központi hálózat
 (core network) és a felhasaználók SIM általi azonositása.
 Az EDGE és a CDMA2000 ellentétben az UMTS új bázis állomást és frekvencia
 allokáicós módszert igényel.
\end_layout

\begin_layout Standard
Az UMTS által támogatott maximális adat átviteli ráta 42 Mbit/s, ha HSPA+
 alkalmaznak a hálozatban és 7.2 Mbit/s HSDPA hasznélat esetén.
 Ezek a sebességek szignifikánsan gyorsabbak , mint a GSM 9.6 kbit/s-os hibajavit
ásos conalkapcsolt adatátvitele, vagy a CDMAOne csatornák 14.4 kbit/s rátája.
\end_layout

\begin_layout Standard
2006 óta UMTS hálozatokat számos országban deljavították a High Speed Downlink
 Packet Access (
\series bold
HSDPA
\series default
) technikával, melyet néha 3.5G néven emlegetnek.
 HSDPA segítségével a letöltési sebesség elérheti a 21 Mbit/s-ot.
 A feltöltési sebbeség javítását támogató technológia a High-Speed Uplink
 Packet Access (
\series bold
HSUPA
\series default
).
 Az első UMTS hálozatot 2002-ben inditották be, nagy hangsúlyt fektetve
 az olyan mobil alkalmazásokra, mint a mobil TV és videóhívás.A nagy adat
 átviteli sebességet gyakran Internet elérésre hasnzálják: Japánban és máshol
 is azt tapasztalták, hogy a felhasnzálóknak nincs nagy igényük a videóhívásokra
, és a telekom társaság által nyújtott audió/videó tartalomra is csökkent
 az igény a nagy sebességű internet hozzáférés miatt.
\end_layout

\begin_layout Standard

\series bold
LTE
\series default
 (Long-Term Evolution) 4G LTE, a legújabb sztenderd a mobiltelefonok és
 adat terminálok közötti nagy sebességű vezetéknélküli adat kommunikációra.
 GSM/EDGE és UMTS/HSPA nhálózati technológiákon alapszik, de nagyobb kapacitást
 és sebeséget nyújt különböző rádiós interfészek együtes alkalmazásával.
 A világ első publikus LTE szolgáltatója a TeliaSonera Oslo-ban és Stockholm-ban
 2009 December 14.
 Várhatóan az LTE lesz az első igazán globális mobil telefon sztenderd,
 habár a országonként különböző frekvencia sávok hasnzálata miatt csak a
 többsávos telefonok lesznek képesek kihasználni minden országban az LTE
 szolgáltatást.
 Míg a korábbi technológiák 28 Mbit/s elméleti maximumot támogat, az LTE
 326 Mbit átvételére lesz képes másodpercenként 4x4 antennával, 20 MHz széles
 frekvenciatartományon.
\end_layout

\begin_layout Standard
The LTE standard only supports packet switching with its all-IP network.
 Voice calls in GSM, UMTS and CDMA2000 are circuit switched, so with the
 adoption of LTE, carriers will have to re-engineer their voice call network.[24]
 Three different approaches sprang up:
\end_layout

\begin_layout Standard
VoLTE (Voice Over LTE): This approach is based on the IP Multimedia Subsystem
 (IMS) network, with specific profiles for control and media planes of voice
 service on LTE defined by GSMA in PRD IR.92.
 This approach results in the voice service (control and media planes) being
 delivered as data flows within the LTE data bearer.
 This means that there is no dependency on (or ultimately, requirement for)
 the legacy Circuit Switch voice network to be maintained.
 CSFB (Circuit Switched Fallback): In this approach, LTE just provides data
 services, and when a voice call is to be initiated or received, it will
 fall back to the CS domain.
 When using this solution, operators just need to upgrade the MSC instead
 of deploying the IMS, and therefore, can provide services quickly.
 However, the disadvantage is longer call setup delay.
 SVLTE (Simultaneous Voice and LTE): In this approach, the handset works
 simultaneously in the LTE and CS modes, with the LTE mode providing data
 services and the CS mode providing the voice service.
 This is a solution solely based on the handset, which does not have special
 requirements on the network and does not require the deployment of IMS
 either.
 The disadvantage of this solution is that the phone can become expensive
 with high power consumption.
\end_layout

\begin_layout Standard
Enhanced voice quality To ensure compatibility, 3GPP demands at least AMR-NB
 codec (narrow band), but the recommended speech codec for VoLTE is Adaptive
 Multi-Rate Wideband, also known as HD Voice.
 This codec is mandated in 3GPP networks that support 16 kHz samplin
\end_layout

\begin_layout Subsubsection*

\series bold
Mobil hálózat szolgáltatások, technológiák
\end_layout

\begin_layout Standard

\series bold
SIM
\series default
 (Subscriber Identity Module): Az egyik fő jellemzője a GSM-nek a SIM bevezetése
, a legtöbben SIM kárty néven ismerik.
 A SIM egy cserélhető okos kártya, mely az előfizető információt és a telefonkön
yvet tartalmazza.
 Lehetővé teszi a felhasználónak, hogy információkat tároljon és egy másik
 telefonban is fel tudja használni azokat.
 Ezentúl lehetővé teszi, hogy szolgáltatót váltson a felhasználó a készülék
 lecserélése nélkül, mivel csak SIM kártyát kell lecserélnie.
 Néhány operátor blockolja ezt a lehetőséget a SIM lezárásával, ez esetben
 a készülék csak az adott szolgáltató kártyáját fogadja el.
\end_layout

\begin_layout Standard

\series bold
WAP
\series default
 (Wireless Application Protocol): egy sztenderd technika a mobil vezeték
 nélküli hálózatokon keresztül történő információ cserének.
 A WAP böngésző egy webböngésző a mobil készülékekhez.
 A WAP bevezetése előtt, a mobil szolgáltatóknak limitált lehetőségük volt
 az interaktív adat szolgáltatásra.
 Interaktivitást követelt az Internet és Web alkalmazások támogatása pl:
 Email kezelés mobil készüléken, tőzsdei árak vagy a sporteredmények követése.
 A WAP sztenderd egy protokoll családot ír le, mely lehetővé teszi az interopera
bilitást a WAP és más különböző hálózati technológiák között, mint a GSM
 és a CDMA.
\end_layout

\begin_layout Standard

\series bold
Roaming
\series default
 egy általános kifejezés a mobil szolgáltatás kiterjesztésére oylan helyre,
 amely különbözik a szolgáltatás regisztrált heléytől.
 Roaming biztosítja a kapcsolatot vezeték nélküli eszköz és a hálózat között,
 a kapcsolat elvesztése nélkül.
 Hagyományos GSM Roaming definició szerint (cf.
 GSM Association Permanent Reference Document AA.39) a cella felhasználó
 képes automatikusan hívást indítani és fogadni, adatokat küldeni és fogadni,
 vagy más szolgáltatásokhoz kapcsolódni, miközben utazik, elhagyja a hazai
 szolgáltatás által lefedett területet.
 
\end_layout

\begin_layout Standard

\series bold
Handover
\series default
 kifejezés (vagy handoff) arra a folyamatra utal, mikor egy folyamatban
 lévő hívást, vagy adat folyamot átviszünk az egyik csatornáról a másikra.
 
\end_layout

\begin_layout Subsubsection*

\series bold
Mobil hálózat elemei
\end_layout

\begin_layout Description
BSC - Base Station Controller, egy BSC több tíz esetleg több száz BTS-t
 irányít.
 A BSC rádió csatornák kiosztásáért felelős, mérési eredményeket fogad a
 mobil készülékektől és a BTS-ek közötti handover-eket kezeli.
 BSC fő funkciója összekötőként viselkedik a BTS-ek és a Mobile Switching
 Center (MSC) között.
 Általában a hálózatokban gyakorta úgy struktúrálják, hogy számos BSC-t
 elosztanak a régiókban közel a BTS-ekhez,melyek egy nagy központosított
 MSC site-al állnak kapcsolatban.
 MSC-ket és Service GPRS Support Node-okat (SGSN) is kiszolgál (abban az
 esetben ha GPRS-t használ).
 
\end_layout

\begin_layout Description
BSS - Base Station Subsystem, ez része a hagyományos mobilhálózatnak (2G,
 GSM) which is responsible for handling traffic and signaling between a
 mobile phone and the network switching subsystem.
 The BSS carries out transcoding of speech channels, allocation of radio
 channels to mobile phones, paging, transmission and reception over the
 air interface and many other tasks related to the radio network.
\end_layout

\begin_layout Description
BTS - Base Transceiver Station, tartalmazza a rádió szignálok átviteléhez
 és fogadásához szükséges berendezéseket, antennákat, valamint a bázisállomással
 (BSC) történő kommunikáció dekodoláshoz és titkositáshoz szökséges eszközöket.
 VAlójában nem más, mint egy pikocella sok rádi adó-vevővel (TRX), amik
 lehetővé teszik különböző frekvenciák kiszolgálását.
 Egy BTS-t a "szülő
\begin_inset Quotes srd
\end_inset

 bázis állomás (BSC) vezérel.
\end_layout

\begin_layout Description
MS - Mobile Station azaz maga a mobil készülék, amivel a felhasználó hívást
 kezdeményezhet és fogadhat.
 Ez a terminologia 2G rendszerekre vonatkozik, mint a GSM.
 3G rendszerekeben a mobile station helyett user equipment-ként (UE) hivatkoznak
 rá.
\end_layout

\begin_layout Description
RNC - Radio Network Controller az UMTS mobil hálózat (UTRAN) irányító egysége
 és a hozzá kapcsolt Node B-k kontrollálásáért felelős.
 BSC-nek 3G-s hálózati megfelelője, hasonló munkát végez: az üzenetek encryptálá
sa és erőforrás kezelés.
 Az RNC kapcsolatban áll a Circuit Switched Core Network-hez a Media Gateway-en
 (MGW) keresztül és az Serving GPRS Support Node-en (SGSN) keresztül a Packet
 Switched Core Network-höz.
\end_layout

\begin_layout Description
Node-B - Ezt a terminust az UMTS hálozatban használják és megfelel a BTS-nek
 a GSM-ben.
 A mobil készülékek Node B-n tudnak egymással kommunikálni.
 Az RNC kontrollálja ezt a node-ot.
\end_layout

\begin_layout Description
VLR - Visitor Location Register, egy adatbázis azon előfizetők számára,
 akik be barangoltak az adott VLR-hez tartozó Mobile Switching Center (MSC)
 területére.
 minden egyes bázis állomáshoz pontosan egy VLR tartozik, így az előfizető
 egyidőben mindig csak egy VLR-ben szerepel.
 Az adatok vagy a mobil készülékről (MS), vagy a HLR-től érkeznek.
 Amint érzékel egy új MS-t az MSC azonnal készít egy új bejegyzést a VLR-jében
 és frissit a HLR-ben az előfizető helyzetét.
\end_layout

\begin_layout Description
HLR - Home Location Register, egy központi adatbázis, ami tartalmazza az
 összes mobil telefon előfizetőj adatát, akik használhatják GSM hálozatot.
 
\end_layout

\begin_layout Description
M-MGW - Mobile Media Gateway egy olyan eszköz, ami a digitális média folyamokat
 konvertálja (transzkodolja) a különbözö telekommunikációs hálozatok között
 (PSTN, 2G, 3G, stb.), illetve lehetővé teszi a különféle átviteli protokolok
 használatatá (ATM, IP, TDM) a hálózatok között.
\end_layout

\begin_layout Description
SGSN - serving GPRS support node felelős a mobil eszközök és kisozlgálo
 állomások közötti adat csomagok szállításáért.
 A feladatai közé tartozik az írányítás (routing), a helymeghatározás és
 a felhasnzálók azonositása (authentication).
 
\end_layout

\begin_layout Description
GGSN - gateway GPRS support node központi eleme a GPRS hálózatnak, az internet
 elérését biztosítja a GPRS hálózat és a külső hálozatok között.
 Kivülről nézve a GGSN egy router, aki elrejti a GPRS hálózat infrastruktúráját
 a külső hálózattól.
 Mikor adat csomagokat kap megvizsgálja, hogy a felhasználó aktív-e és,
 ha igen akkor továbbítja a csomagot az SGSN-nek, aki kisozlgálja a mobil
 felhasználót.
\end_layout

\begin_layout Description
MSC - Mobil Softswitch Controller ) elsődleges eleme a GSM/CDMA hálózatoknak,
 a hang hívások route-olásáért és az SMS, valamint más szolgáltatásokért
 felelős(mint a konferencia hívások, FAX).
 Kiépíti, majd lebontja a kapcsolatokat, hívásokat, valamint kezeli a hand-over-
eket.
\end_layout

\begin_layout Subsection
Mobilhálózatok fejlődése
\end_layout

\begin_layout Standard
Az első rádiótelefon szolgáltatás '40es végén vezették be Amerikában, ez
 azt jelentette, hogy mobil használók autóból tudtak kapcsolódni a meglévő
 publikus telefonhálozathoz.
 1960-ban új rendszert indított a Bell Systems, amit IMTS-nek (Improved
 Mobile Telephone Service) hívtak, mely számos újítást hozott, például szélesebb
 sávszélességet.
 Az első analóg cellás rendszer ezen az IMTS rendszeren alapult és a 1970-es
 évek elején fejlesztették ki.
 A rendszert "cellás" volt, mert a lefedett területeket felosztották kisebb
 részekre, avagy "cellákra".
 
\end_layout

\begin_layout Subsubsection*

\series bold
Első generáció 
\end_layout

\begin_layout Standard
Első generációs mobil rendszer az AMPS (Advance mobile phone system), melyet
 először az Egyesült államokban vezették be.
 Ez az egyik legjobb FDMA (Frequency Division Multiple Access) technológia,
 mely lehetővé teszi, hogy hanghívást bonyolíthat az egész országban.
\end_layout

\begin_layout Subsubsection*

\series bold
Második generáció
\end_layout

\begin_layout Standard
2G digitális cellás rendszer, melyet az 1980-as évek végén fejlesztették
 ki.
 Az új rendszer jobb minőséget és nagyobb kapacitást biztosít a felhasználóknak.
 GSM (Global system for mobile communication) volt az első kereskedelemben
 működtetett digitális cellás rendszer, mely TDMA (Time division multiple
 acces) alapú.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\paragraph_spacing single
\noindent
\align center
\begin_inset Graphics
	filename Gsm_structures.svg.jpg
	scale 55

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
2G hálózat struktúrája
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection

\series bold
Harmadik generáció
\series default
 
\end_layout

\begin_layout Standard
3G kezdeményezés a készülék gyártóktól származott, nem pedig a telefon hálózatok
 operátoraitól.
 A fejlesztés 1996-ban kezdődött a Nippon Telephone & Telegraph (NTT) és
 az Ericsson vezetésével; 1997-ben az amerikai Telecommunications Industry
 Association (TIA) a CDMA-t választotta 3G technológiájának; 1998-ban az
 European Telecommunications Standards Institute (ETSI) ugyan ezt tette
 és végül a széles sávú CDMA (W-CDMA) és a cdma2000 adaptálták az UMTS-hez
 (Universal Mobile Telecommunications System).
 W-CDMA és CDMA 2000 volt a két legnagyobb javaslat a 3G technológiára.
 A W-CDMA TDM-et (Time Division Multiplexing), ezzel ellentétben a CDMA
 2000 CDM-e (Code Division Multiplexing) eljárást használ.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename UMTS_structures.svg.jpg
	scale 55

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
3G hálózat struktúrája
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
3G rendszer gyorsabb kommunikációs szolgáltatást nyújt, beleértve a hang,
 fax és Internet szolgáltatásokat, melyek bármikor és bárhonnan elérhetőek.
 Az ITU féle IMT-2000 3G sztenderd tette lehetővé az innovatív applikációk
 pl: multimédiás szorakoztatás, információ és helymeghatározás szolgáltatások
 elterjedését a felhasználók között.
 Az első 3G hálózatot Japánban építették ki 2001-ben.
 2.5G hálózatok, mint a GPRS (Global Packet Radio Service) már elérhetőek
 voltak Europa bizonyos országaiban.
 3G technológia támogatja a 144 Kbps sávszélességet nagy sebességű mozgásnál
 (pl: járművek), 384 Kbps pl egyetemek területén és 2 Mbps-ot állóhelyzetben
 (pl: épületen belül).
 A maximális letöltési adatráta 384Kpbs, átlagosan 200 Kpbs és a feltöltés
 is ráta 64 Kpbs.
\end_layout

\begin_layout Subsubsection*

\series bold
Negyedik generáció 
\end_layout

\begin_layout Standard
Napjainkban a letöltési sebesség download speed limitált 9.6 kbit/sec-ra,
 mely 6-szor lassabb, mint egy ISDN (Integrated services digital network)
 kapcsolat esetén.
 Valójában ez a sebesség sokkal lassab,főleg zsúfolt helyeken, vagy ha hálózat
 nagyon leterhelt.
 Negyedik generációs (4G) mobil kommunikáció nagyobb adat átvitelre lesz
 képes, mint a 3G.
 Az adatráta tervezett mértéke 20 Mbps.
\end_layout

\begin_layout Standard
A 4G szolgáltatás biztosítani fogja a szélessávú, nagy kapacitású, nagy
 sebességű adat átvitelt; lehetővé teszi a jó minőségű video megjelenítést,
 háromdimenziós animációs játék és 5.1-es hang szolgáltatást.
\end_layout

\begin_layout Subsection
A hálózatok vizsgált adatai
\end_layout

\begin_layout Standard
A mobilhálózatok paramétereinek összefoglalása (KPI-ok) a vizsgálandó adatokkal,
 értékhatárokkal
\end_layout

\begin_layout Standard
A lenti táblázat tartalmazza az átviteli sebességeket különféle technologiák
 esetén.
 Amint látható, a 3G és a későbbi hálózatok adat rátája egyre inkább növekszik,
 így lehetővé téve a nagyobb sávszélesség igényű szolgáltatások bevezetését.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="11" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="right" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Technológia
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Adatráta
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GSM
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9.6Kbps 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GSM/GPRS 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
40Kbps-144Kbps 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
EDGE 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
474Kbps
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UMTS (WCDMA) 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
384Kbps-2Mbps 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CDMA-One 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9.6Kbps-76.8Kpbs
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CDMA 2000 1x EV-DO 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
384Kbps – 2.4Mbps 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CDMA 2000 1x EV-DV
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3.09Mbps 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CDMA 2000 3x
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2Mbps – 4Mbps
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
HSDPA 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8Mbps – 10Mbps
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
VSF-OFCDM
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
le 100 Mbpsm, fel 20 Mbps.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Technológia és elérhető adatráták
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Android platform bemutatása
\end_layout

\begin_layout Standard
Az Andoroid fejlesztő környezet széleskörű támogatást nyújt a fejlesztőknek
 a telefon és a hálózat adatainak lekéréséhez, ami nagyban megkönnyíti az
 alkalmazás fejlesztését.
 
\end_layout

\begin_layout Subsection
Architektúra
\end_layout

\begin_layout Standard
Az Android fejlesztőkörnyezetnek három komponensét használom.
 Mindegyiknek különböző célja és szerepe van a programban.
 
\end_layout

\begin_layout Subsubsection
Activity
\end_layout

\begin_layout Standard
Egy felhasználói felülettel rendelkező képernyőt, ablakot Activity-nek nevezünk.
 Például egy zenelejátszó program Activity-je lehet, ami megjeleníti a lejátszó
 felületet, és egy másik, ahol kiválaszthatja a felhasználó a lejátszandó
 zenéket.
 Minden alkalmazásnak van egy kitüntet "main
\begin_inset Quotes srd
\end_inset

 Activity-je, ha a felhasználó elindítja a programot ez az ablak jelenik
 meg.
 Habár mindegyik Activity a zenelejátszó programban együttműködve adja a
 teljes felhasználói élményt, mégis mindegyik független a többitől.
 
\end_layout

\begin_layout Standard
A hagyományos applikációkkal ellentétben az Android programoknak nincs kontrollj
uk az életciklusuk felett.
 Így az alkalmazás komponenseinek figyelnie kell a program állapot változására
 és aszerint reagálni.
 A komponensek állapota befolyásolja a program állapotát, mely meghatározza
 a program prioritását a rendszerben.
 Az Activity-k úgynevezett Activity stack-en, azaz egy Last-In-First-Out
 adatszerkezetben tárolódnak.
 Mikor egy új Activity elindul, az előtte futó kerül a stack tetejére.
 Ha az előtérben lévő, aktív Activity bezáródik vagy a felhasználó megnyomja
 a Vissza gombot, akkor a verem tetején lévő kerül előtérbe.
 Ha az Activity-t megsemmisíti a rendszer, mert már nincs rá szükség, akkor
 felszabadítja annak erőforrásait és eltávolítja a veremből.
 A folyamatot az alábbi kép szemlélteti.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename stack.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Activity-ket tartalmazó verem
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Az Activity-nek négy állapota lehet:
\end_layout

\begin_layout Itemize

\series bold
Aktív 
\series default
(Active), ebben az állapotban a verem tetején lévő Activity lehet, ilyenkor
 az ablak az előtérben van és képes fogadni a felhasználói utasításokat.
 Az Android rendszer mindent megtesz annak érdekében, hogy ez az Activity
 futhasson.
 Így, ha kevés az erőforrás, a memória, akkor leállítja a verem alján lévőket
 és felszabadítja azok erőforrását.
 Mikor egy másik Activity lesz az aktív, akkor az előbbi állapota felfüggesztett
 lesz.
\end_layout

\begin_layout Itemize

\series bold
Felfüggesztett
\series default
 (Paused) állapotban az Activity látható maradhat, de nem reagál felhasználói
 eseményekre, nincs fókusza.
 Ez akkor fordulhat elő, ha az előtérben lévő ablak átlátszó vagy nem fedi
 le a teljes képernyőt.
 
\end_layout

\begin_layout Itemize

\series bold
Leállt 
\series default
(Stopped), ekkor az Activity nem látható, leállt.
 Az erőforrások még nem szabadulnak fel és a veremből sem kerül ki.
 A leállt Activity-k prioritása a legkisebb, így ezeket terminálja legelőször
 a rendszer, ha erőforrásra van szüksége.
\end_layout

\begin_layout Itemize

\series bold
Inaktív 
\series default
(Inactive) állapotba kerül, ha terminálva lett vagy mielőtt elindul.
 Ezek az Activity-k nincsenek a veremben és csak újraindításkor válhat aktívvá.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename activity_lifecycle.png
	scale 60
	clip

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Activity életciklusa
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Android rendszer biztosítja, hogy az egyes Activity-k reagálhassanak az
 állapotváltásra.
 A lenti képen láthatóak az Activity életciklusai.
 A téglalapok visszahívó (callback) metódusokat szimbolizálnak.
 Ezek felhasználhatók különféle műveletek végrehajtására az egyes átmenetek
 során.
\end_layout

\begin_layout Itemize

\series bold
onCreate() 
\series default
Az Activity létrejöttekor hívódik meg.
 Itt kell az összes statikus adatot inicializálni, például nézetek létrehozása.
 Ez a függvény kap egy Bundle típusú paramétert, mely az Activity előző
 állapotát tartalmazza.
 Mindenképp onStart() metódus hívás követi.
\end_layout

\begin_layout Itemize

\series bold
onRestart() 
\series default
egy leálított Activity újraindlása előtt hívódik meg.
 OnStart() metódus követi.
\end_layout

\begin_layout Itemize

\series bold
onStart() 
\series default
az előtt hívódik, hogy az Activity láthatóvá válna a felhasználó számára.
 OnResume() metódus hívódik ezután, ha az Activity előtérbe kerül vagy az
 onStop(), ha háttérbe kerül.
\end_layout

\begin_layout Itemize

\series bold
onResume() 
\series default
akkor hívódik, ha az Activity a verem tetejére kerül, mielőtt aktívvá válna
 és felhasználói inputot fogadna.
 Minden esetben onPause() hívódik utána.
\end_layout

\begin_layout Itemize

\series bold
onPause() 
\series default
egy másik alkalmazás folytatása váltja ki ezt a metódushívást.
 Itt célszerű elmenteni az adatokat, illetve leállítani az erőforrás igényes
 műveleteket, mint például az animáció lejátszást.
\end_layout

\begin_layout Itemize

\series bold
onStop() 
\series default
az Activity leállásakor vagy egy másik Activity aktívvá válásakor hívódik,
 ilyenkor Ezután onRestart() hívás jelzi, hogy újra aktívvá vált az Activity.
 
\end_layout

\begin_layout Itemize

\series bold
onDestroy() 
\series default
az Activity megszűnésekor kerül meghívásra, amit vagy a rendszer vált ki,
 mert erőforrásra van szüksége vagy meghívták rá az 
\shape italic
finish()
\shape default
 metódust.
\end_layout

\begin_layout Subsubsection
Service TODO: intent service
\end_layout

\begin_layout Standard
A Service (szolgáltatás) egy háttérben, párhuzamosan futó komponens.
 Sokáig futó műveletek végrehajtására használható és nem biztosít felhasználói
 felületet.
 Ilyen művelet lehet például a zenelejátszás, miközben a felhasználó más
 alkalmazást használ, anélkül, hogy a háttérben futó zenelejátszás blokkolná
 vagy zavarná a másik alkalmazást, illetve a felhasználót.
 Egy másik komponens, mint például egy Activity indíthat Service-t és interakció
ba léphet vele.
 Egy új service-t indíthat egy komponens a 
\shape italic
startService()
\shape default
 metódus hívással, ami akkor is fut, ha a hívó komponens megszűnik.
 Service automatikusan leáll, ha a feladatát befejezte.
 Ez a feladat lehet például egy fájl feltöltése.
 Másik müködési módja a service-nek az úgynevezett kötött (bound) service.
 Egy komponens a 
\shape italic
bindService()
\shape default
 metódussal tud összeköttetésbe kerülni ezzel service-vel.
 Több komponens is kapcsolódhat egy service-hez, ha már egy komponens se
 kapcsolódik a szolgáltatáshoz, akkor megszűnik a service.
 Fontos callback metódusok, melyeket implementálhat egy service-nek:
\end_layout

\begin_layout Itemize

\series bold
onStartCommand() 
\series default
akkor hívódik, mikor egy másik komponens meghívja a 
\shape italic
startService()
\shape default
 metódust.
 Ha ez a metódus implementálásra kerül és befejetze a müködését, akkor a
 le kell állítani a 
\shape italic
stopSelf()
\shape default
 vagy 
\shape italic
stopService()
\shape default
 metódussal.
 Ha csak kötött szolgáltatásként szeretnénk használni , akkor nem kell implement
álni ezt a metódust.
\end_layout

\begin_layout Itemize

\series bold
onBind()
\series default
 metódus hívódik, ha egy másik komponens akar kapcsolódni a service-hez
 a 
\shape italic
bindService()
\shape default
 függvény hívással.
 Ha nem akarjuk megengedni a szolgáltatáshoz való csatlakozást akkor null-t
 kell visszatérő paraméterként, egyébként pedig egy IBinder típusú objektumot,
 amin keresztül a hívó komponens komunikálhat a szolgáltatással.
\end_layout

\begin_layout Itemize

\series bold
onCreate()
\series default
 a service létrehozásakor hívódik az 
\shape italic
onStartCommand()
\shape default
 előtt.
\end_layout

\begin_layout Itemize

\series bold
onDestroy()
\series default
 a rendszer hívja ezt a metódust, mikor a szolgáltatást már nem használják
 többé és meg kell szünteni.
 Itt kell felszabadítani a foglalt erőforrásokat, szálakat.
\end_layout

\begin_layout Subsubsection
Broadcast receiver TODO: ehelyett application object
\end_layout

\begin_layout Standard
A broadcast receiver egy olyan komponens, amely válaszol a rendszerszintű
 üzenetekre.
 Számos rendszerüzenetet kezelhet például a képernyő kikapcsolásról vagy
 az akkumulátor töltöttségének csökkenéséről érkező üzeneteket.
 Az alkalmazás is kezdeményezhet ilyen üzenet küldést például, ha egy másik
 alkalmazásnak akar üzenetet küldeni.
 A service-hez hasonlóan nem rendelkezik felhasználói felülettel.
\end_layout

\begin_layout Standard
Az egyes komponenseket egy aszinkron üzenettel lehet aktiválni amit Inetent-nek
 neveznek.
 Ez kapcsol össze komponenseket futási időben, akkor is, ha a komponens
 egy másik applikációhoz tartozik.
 Az Intent közvetíthet üzenetet másik komponensnek, például, hogy jelenítsenek
 meg egy képet vagy nyisson meg egy weboldalt.
\end_layout

\begin_layout Subsection
Futási környezet, erőforrás kezelés
\end_layout

\begin_layout Standard
Java és az Android kapcsolata, dalvik virtuális gép.
 Erőforrások (képek, szövegek, hangok) kezelése
\end_layout

\begin_layout Standard
Az alábbi lista tartalmazza a jogokat (permissions) amit a mobil alkalmazás
 használ:
\end_layout

\begin_layout Description

\series bold
coarse location (network-based):
\series medium
 ahhoz hogy megjelnithessük a készülék helyzetét a térképen és mérhessük
 a jelerősséget az alaklamazásnak szüksége van erre.
 Ezt a hálózati poziciót gyorsan el tudja nekünk küldeni hálózati eszköz,
 de elég durva becslést ad a telefon helyére, körülbelül 100 métres pontossággal.
 Ezt akkor használjuk, mikor a GPS szolgáltatás nem elérhető, például beltérben.
\end_layout

\begin_layout Description

\series bold
fine location (GPS):
\series default
A szabadban megfelelően erős a GPS műhold jele, ahhoz, hogy pontosan meghatározz
uk a telefon helyzetét.
\end_layout

\begin_layout Description

\series bold
Network communication, full internet access, view network state
\series default
: A hálózat állapotának figyelésével kapunk értesítést a jel erősség változásról.
 Internet hozzáférés szükséges a szerverrel való kommunkikációhoz és a térkép
 frissítéséhez.
 The app will actually stop updating the map if signal strength gets too
 week (below -102 dBm), otherwise it would appear to freeze waiting for
 tile updates.
 :O ???
\end_layout

\begin_layout Standard
Storage modify/delete USB storage contents
\end_layout

\begin_layout Standard
Users need the ability to save recorded data to, and read that and other
 data from, the rfsignaldata directory on the USB storage device (your phone).
 Older data that was recorded and saved can be reloaded and played back
 within the app.
 Also users can load their own custom site location data into the database.
 All of these actions require interacting with the storage device.
 The app ONLY interacts with the rfsignaldata directory.
\end_layout

\begin_layout Standard
Phone calls read phone state and identity
\end_layout

\begin_layout Standard
This is a critical permission since reading these parameters is at the heart
 of the app's function.
 The app does not save or transmit any of these parameters other than those
 which appear in the recorded data.
 Critical identity parameters such as IMEI/ESN, phone number, SIM serial
 number, and MAC address are never recorded or transmitted by the app.
\end_layout

\begin_layout Standard
System tools change Wi-Fi state, prevent phone from sleeping
\end_layout

\begin_layout Standard
One of the many features the app monitors is the Wi-Fi state of the device
 as well as the signal strength of other Wi-Fi hotspots within range.
 Turning on and off the feature that listens for hotspots requires the change
 Wi-Fi state permission.
 While hotspots are identified and can be recorded, the Wi-Fi state of the
 device is never transmitted or saved.
\end_layout

\begin_layout Standard
Because of the way the app will be used it is necessary to keep the device
 awake, so a "wake-lock" is held to prevent the device from sleeping.
 This does not apply if you start recording and press the Back button to
 get out of the app.
 In this case, the app will continue to record, but the device may go to
 sleep (if it has been setup to do that).
 If this happens then signal strength updates will stop and not resume until
 the device awakes.
\end_layout

\begin_layout Subsection
Komponensek leírása
\end_layout

\begin_layout Standard
Kliens oldali komponensek
\end_layout

\begin_layout Standard
Basic Steps to Setup the GPS:
\end_layout

\begin_layout Standard
Set the permissions in the Manifest.
\end_layout

\begin_layout Standard
<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
 <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"
 />
\end_layout

\begin_layout Standard
These permissions are needed so the device can use the "coarse" location
 where the mobile location is determined by the cell network.
 This is not very precise, but it is fast and will give your ballpark position
 (literally) until the slower, more power intensive, but more accurate GPS
 can get an accurate fix.
\end_layout

\begin_layout Standard
Create the location objects.
\end_layout

\begin_layout Standard
LocationManager locationManager; LocationListener listenerCoarse, listenerFine;
\end_layout

\begin_layout Standard
I set these as global variables.
\end_layout

\begin_layout Standard
Listen to the location objects.
\end_layout

\begin_layout Standard
This is the heart of the exercise.
 I create a method that gets called when the activity starts.
 I call it in the onResume() method because this is called the first time
 the activity is used and every time it resumes after being paused (see
 activity lifecycle).
 The method has this structure:
\end_layout

\begin_layout Standard
private void locationSetup(){ // set the location manager // Initialize
 fine criteria for location providers // Initialize coarse criteria for
 location providers.
 // set gps update distance & time // get the last known location // setup
 your listener // setup fine and coarse listeners }
\end_layout

\begin_layout Standard
First set the global location manager objects:
\end_layout

\begin_layout Standard
locationManager = (LocationManager)getSystemService(Context.LOCATION_SERVICE);
\end_layout

\begin_layout Standard
Now initialize your fine and coarse listener criteria:
\end_layout

\begin_layout Standard
Criteria fine = new Criteria(); fine.setAccuracy(Criteria.ACCURACY_FINE);
 fine.setAltitudeRequired(false); fine.setBearingRequired(false); fine.setSpeedRequ
ired(true); fine.setCostAllowed(true);
\end_layout

\begin_layout Standard
Criteria coarse = new Criteria(); coarse.setAccuracy(Criteria.ACCURACY_COARSE);
\end_layout

\begin_layout Standard
With the "fine" criteria I'm asking for ACCURACY_FINE, of course, I don't
 need altitude or bearing necessarily, but I do want speed.
 The setCostAllowed() condition is set because not all mobile plans include
 an unlimited data package, so customers may be charged a per-use fee for
 data, which includes GPS data.
 So, it's necessary to ask users if it's okay to incur costs on their behalf
 for data that your application consumes.
 I set this to true under the assumption they know they are using data constantl
y, but you can choose otherwise.
\end_layout

\begin_layout Standard
The coarse criteria is simple, just set to ACCURACY_COARSE.
 I made the mistake of choosing very strict criteria on this once and did
 not realize that I effectively made this "coarse" criteria a "fine" criteria.
 This is important because making the coarse criteria too fine will basically
 force the app to always use the GPS location handling rather than the looser
 (and faster) network.
 What this means in practice is if the user is inside when the app starts
 he will never be able to determine his location -- GPS does not work indoors.
\end_layout

\begin_layout Standard
Keep the coarse criteria loose, like I have it, and it will locate the mobile
 in a building and switch over to GPS when the mobile moves outdoors.
\end_layout

\begin_layout Standard
I then set the power level for both:
\end_layout

\begin_layout Standard
fine.setPowerRequirement(Criteria.POWER_HIGH); coarse.setPowerRequirement(Criteria.P
OWER_LOW);
\end_layout

\begin_layout Standard
You can let the user choose these levels with preferences in your code.
 
\end_layout

\begin_layout Standard
Now set you update intervals:
\end_layout

\begin_layout Standard
int GPS_TIMEUPDATE = 1500; // update gps every 1.5sec int GPS_DISTANCEUPDATE
 = 7; // update gps every 7m
\end_layout

\begin_layout Standard
Now get your last known location:
\end_layout

\begin_layout Standard
String provider = locationManager.getBestProvider(coarse, true); Location
 location = locationManager.getLastKnownLocation(provider);
\end_layout

\begin_layout Standard
This basically sets provider=network which gives you a fast result to the
 "location" variable based on the last location the device was aware of.
 This object contains your rough latitude and longitude and a few other
 things.
 
\end_layout

\begin_layout Standard
We now set up listeners for coarse and fine location updates:
\end_layout

\begin_layout Standard
if (listenerFine == null || listenerCoarse == null){ createLocationListeners();
 }
\end_layout

\begin_layout Standard
When the app starts, listenerFine and listenerCoarse will, of course, be
 null, so the createLocationListeners() method will be called (we will create
 that shortly).
 Once the listeners are initialized we set up the update specifics for the
 two listeners:
\end_layout

\begin_layout Standard
if(listenerCoarse != null){ locationManager.requestLocationUpdates( locationManag
er.getBestProvider(coarse, true), GPS_TIMEUPDATE, GPS_DISTANCEUPDATE, listenerCoa
rse ); }
\end_layout

\begin_layout Standard
if(listenerFine != null){ locationManager.requestLocationUpdates( locationManager.
getBestProvider(fine, true), GPS_TIMEUPDATE, GPS_DISTANCEUPDATE, listenerFine
 ); }
\end_layout

\begin_layout Standard
locationManager.getBestProvider([criteria], [boolean]) returns the name of
 the provider that best meets the given criteria.
 Only providers that are permitted to be accessed by the calling activity
 will be returned.
 If several providers meet the criteria, the one with the best accuracy
 is returned.
 If no provider meets the criteria, the criteria are loosened in the following
 sequence: power requirement, accuracy, bearing, speed, then altitude.
 Note that the requirement on monetary cost is not removed in this process.
\end_layout

\begin_layout Standard
GPS_TIMEUPDATE is the minimum time interval for notifications, in milliseconds.
 This field is only used as a hint to conserve power, and actual time between
 location updates may be greater or lesser than this value.
\end_layout

\begin_layout Standard
GPS_DISTANCEUPDATE the minimum distance interval for notifications, in meters.
\end_layout

\begin_layout Standard
And finally the location listener (listenerFine/listenerCoarse) that is
 called for every update.
 All the above code is placed in a try/catch and will look like this:
\end_layout

\begin_layout Standard
locationSetup private void locationSetup(){ try{ // set the location manager
 locationManager = (LocationManager)getSystemService(Context.LOCATION_SERVICE);
\end_layout

\begin_layout Standard
// Initialize fine criteria for location providers Criteria fine = new Criteria(
); fine.setAccuracy(Criteria.ACCURACY_FINE); fine.setAltitudeRequired(false);
 fine.setBearingRequired(false); fine.setSpeedRequired(true); fine.setCostAllowed(t
rue); // Initialize coarse criteria for location providers.
 Criteria coarse = new Criteria(); coarse.setAccuracy(Criteria.ACCURACY_COARSE);
 
\end_layout

\begin_layout Standard
fine.setPowerRequirement(Criteria.POWER_HIGH); coarse.setPowerRequirement(Criteria.P
OWER_LOW); // set gps update distance & time int GPS_TIMEUPDATE = 1500;
 // update gps every 1.5sec int GPS_DISTANCEUPDATE = 7; // update gps every
 7m
\end_layout

\begin_layout Standard
// get the last known location String provider = locationManager.getBestProvider(
coarse, true); Location location = locationManager.getLastKnownLocation(provider)
; // your initial location // setup your listener if (listenerFine == null
 || listenerCoarse == null){ createLocationListeners(); }
\end_layout

\begin_layout Standard
// Will keep updating about every GPS_TIMEUPDATE ms until accuracy is //
 about GPS_DISTANCEUPDATE meters to get quick fix.
 if(listenerCoarse != null){ locationManager.requestLocationUpdates( locationMana
ger.getBestProvider(coarse, true), GPS_TIMEUPDATE, GPS_DISTANCEUPDATE, listenerCo
arse ); } // Will keep updating about every GPS_TIMEUPDATE ms until accuracy
 is // about GPS_DISTANCEUPDATE meters to get accurate fix.
 if(listenerFine != null){ locationManager.requestLocationUpdates( locationManage
r.getBestProvider(fine, true), GPS_TIMEUPDATE, GPS_DISTANCEUPDATE, listenerFine
 ); } }catch(Exception e){ e.printStackTrace(); } }
\end_layout

\begin_layout Standard
Next we create the method that defines the location listeners.
 This method will automatically use either a fine or coarse location listener
 based on the accuracy it is currently receiving:
\end_layout

\begin_layout Standard
createLocationListeners /** * Creates LocationListeners */ private void
 createLocationListeners() {
\end_layout

\begin_layout Standard
listenerFine = new LocationListener() { public void onStatusChanged(String
 provider, int status, Bundle extras) {} public void onProviderEnabled(String
 provider) {} public void onProviderDisabled(String provider) {} public
 void onLocationChanged(Location location) { if (location.getAccuracy() >
 500 && location.hasAccuracy()){ locationManager.removeUpdates(listenerFine);
 }else{ // do something with your location update } } };
\end_layout

\begin_layout Standard
listenerCoarse = new LocationListener() { public void onStatusChanged(String
 provider, int status, Bundle extras) {} public void onProviderEnabled(String
 provider) {} public void onProviderDisabled(String provider) {} public
 void onLocationChanged(Location location) { if (location.getAccuracy() <
 500 && location.hasAccuracy()){ locationManager.removeUpdates(listenerCoarse);
 }else{ // do something with your location update }
\end_layout

\begin_layout Standard
} }; }
\end_layout

\begin_layout Standard
Stop listening to the location objects.
\end_layout

\begin_layout Standard
Finally a best practices is to turn off your listeners if you pause or exit
 your activity, otherwise the user will see the GPS icon in the notification
 bar continue to blink after leaving the app.
\end_layout

\begin_layout Standard
if(locationManager != null){ locationManager.removeUpdates(listenerCoarse);
 locationManager.removeUpdates(listenerFine); }
\end_layout

\begin_layout Standard
Enclose this in a try/catch and you should be good.
 I like to set this in a separate "stopListening()" method that gets called
 when I exit or pause the activity or leave the activity.
 
\end_layout

\begin_layout Standard
Szerver oldali komponensek
\end_layout

\begin_layout Section
A program architektúrája
\end_layout

\begin_layout Standard
alrendszerek, rétegek kapcsolatainak bemutatása, a fentebb definiált komponensek
 összekapcsolásának terve
\end_layout

\begin_layout Subsection
Szerver oldal
\end_layout

\begin_layout Subsection
Kliens oldal
\end_layout

\begin_layout Subsection
Adatbázis leírása
\end_layout

\begin_layout Standard
A program által használt adatbázis modell bemutatása, mezők jellemzése
\end_layout

\begin_layout Standard
SQLite is an Open Source database.
 SQLite supports standard relational database features like SQL syntax,
 transactions and prepared statements.
 The database requires limited memory at runtime (approx.
 250 KByte) which makes it a good candidate from being embedded into other
 runtimes.
\end_layout

\begin_layout Standard
SQLite is embedded into every Android device.
 Using an SQLite database in Android does not require a setup procedure
 or administration of the database.
\end_layout

\begin_layout Standard
You only have to define the SQL statements for creating and updating the
 database.
 Afterwards the database is automatically managed for you by the Android
 platform.
\end_layout

\begin_layout Standard
Access to an SQLite database involves accessing the file system.
 This can be slow.
 Therefore it is recommended to perform database operations asynchronously.
\end_layout

\begin_layout Standard
If your application creates a database, this database is by default saved
 in the directory DATA/data/APP_NAME/databases/FILENAME.
\end_layout

\begin_layout Standard
To address the problem of showing accurate serving cell locations, I have
 added (in version 1.1.0) the ability to load your own cell site list into
 the app's database.
 If you have access to cell location data and can place this into a .
\series bold
CSV
\series default
 text file, then you can upload that data to the phone.
 Note ~ this sort of data is proprietary...carriers do not like the competition
 knowing what they do and do not cover, which is why it is so hard to come
 by.
\end_layout

\begin_layout Standard
Read the instructions below to learn how the CSV file must be formatted.
\end_layout

\begin_layout Standard
The CSV file must be in one of two forms.
 The basic format is:
\end_layout

\begin_layout Standard
mcc,mnc,lac,ci,latitude,longitude 310,260,3601,981,48.9929,-122.7473 310,260,3601,
982,48.99287,-122.74726 310,260,3601,983,48.99287,-122.74728 ...
 310,260,5509,7123,47.684035,-122.647912 310,260,5509,7211,47.550236,-122.583084
 310,26,41306,6023,47.15562489,-122.043519
\end_layout

\begin_layout Standard
where the first line is the header, and each row after that is a location
 record.
 The order of the data in each row must be:
\end_layout

\begin_layout Standard
mobile country code, mobile network code, location area code, cell ID, latitude,
 longitude.
\end_layout

\begin_layout Standard
If the phone technology is CDMA then MCC is the Network Operator, MNC is
 the System ID, LAC is the Network ID, and CellID is the Base Station ID.
\end_layout

\begin_layout Standard
Introduced in version 2.5.6, an optional cell name may be added to the end
 of each record.
 Example:
\end_layout

\begin_layout Standard
mcc,mnc,lac,ci,latitude,longitude,cellname 310,260,3601,981,48.9929,-122.7473,BA23
44_GYU 310,260,3601,982,48.99287,-122.74726, 310,260,3602,2877,48.86496624,-121.6642
2, 310,260,3601,983,48.99287,-122.74728,BA23356_OOI ...
 310,260,5509,7123,47.684035,-122.647912,Corner_bakery 310,260,5509,7211,47.550236,
-122.583084,Libarary_cell 310,26,41304,31341,47.15864796,-122.457171,AINSWRT6
\end_layout

\begin_layout Subsection
Felhasználó felület terve
\end_layout

\begin_layout Standard
áttekintő ábra, amely mutatja a képernyők közti navigálási lehetőségeket,
 irányokat.
 Kiemelve a fontosabb felhasználói eseménykezeléseket
\end_layout

\begin_layout Section
A program megvalósítása
\end_layout

\begin_layout Subsection
Döntések a megvalósítás során
\end_layout

\begin_layout Standard
Ide kerül annak a leírása, hogy miért nem lettek megvalósítva a hívás indításos
 mérések; A több szálúság szükségessége és a komponensek kommunikációjának
 miértjei
\end_layout

\begin_layout Subsection
Osztályok bemutatása
\end_layout

\begin_layout Standard
A program osztály hierarchiájának az osztályok szerepének bemutatása 
\end_layout

\begin_layout Subsection
Activity-k egymás közti kommunikációja
\end_layout

\begin_layout Standard
Az aszinkron működés kommunikációs megoldásainak leírása
\end_layout

\begin_layout Subsection
Fájlok kapcsolata
\end_layout

\begin_layout Standard
a projekt könyvtár szerkezetének és a fájlok szerepének bemutatása 
\end_layout

\begin_layout Section
Tesztelés
\end_layout

\begin_layout Standard
The first "Lint" program originated on Seventh Edition Research Unix at
 Bell Laboratories.
 AndroidLint, a part of the standard Android SDK.
\end_layout

\begin_layout Standard
What the tools does is examine your code, and offer opinions based on expert-lev
el knowledge of the language and libraries.
 But there will be cases where you're right.
 And, of course, it's an impossibly-hard problem for the computer to know
 which, so there is no substitute for the judgement of an experienced developer!
\end_layout

\begin_layout Standard
One very common error is to create a Toast by calling makeText(), and forget
 to call the new Toast's show() method; the toast is created but never pops
 up! The standard compiler cannot catch this kind of error, but Android
 Lint can, and that is just one of its many capabilities.
 you can run it under Eclipse.
 
\end_layout

\begin_layout Subsection
Unit teszt
\end_layout

\begin_layout Standard
unit tesztek és tesztek lefedettségének leírása (whitebox)
\end_layout

\begin_layout Standard
Android test suites are based on JUnit.
 You can use plain JUnit to test a class that doesn't call the Android API,
 or Android's JUnit extensions to test Android components.
 
\end_layout

\begin_layout Standard
You can use the JUnit TestCase class to do unit testing on a class that
 doesn't call Android APIs.
 TestCase is also the base class for 
\series bold
AndroidTestCase
\series default
, which you can use to test Android-dependent objects.
 Besides providing the JUnit framework, AndroidTestCase offers Android-specific
 setup, teardown, and helper methods.
\end_layout

\begin_layout Standard
You use the JUnit Assert class to display test results.
 The assert methods compare values you expect from a test to the actual
 results and throw an exception if the comparison fails.
\end_layout

\begin_layout Standard

\series bold
Instrumentation
\end_layout

\begin_layout Standard
Android instrumentation is a set of control methods or "hooks" in the Android
 system.
 These hooks control an Android component independently of its normal lifecycle.
 They also control how Android loads applications.Normally, an Android component
 runs in a lifecycle determined by the system.
 For example, an Activity object's lifecycle starts when the Activity is
 activated by an Intent.
 The object's onCreate() method is called, followed by onResume().
 When the user starts another application, the onPause() method is called.
 If the Activity code calls the finish() method, the onDestroy() method
 is called.
 The Android framework API does not provide a way for your code to invoke
 these callback methods directly, but you can do so using instrumentation.
\end_layout

\begin_layout Standard
You use the 
\series bold
ApplicationTestCase 
\series default
test case class to test the setup and teardown of Application objects.
 These objects maintain the global state of information that applies to
 all the components in an application package.
 The test case can be useful in verifying that the <application> element
 in the manifest file is correctly set up.
 Note, however, that this test case does not allow you to control testing
 of the components within your application package.
\end_layout

\begin_layout Subsection
Rendszer teszt
\end_layout

\begin_layout Standard
program tesztelése valódi mobilon és emulátoron.
 (blackbox)
\end_layout

\begin_layout Subsection
Tesztelés eredménye
\end_layout

\begin_layout Standard
tesztelések eredményének összefoglalása, a tesztelés alatt előforduló hibák
 megjegyzése és a javítás dokumentálása
\end_layout

\begin_layout Standard
esetleg hatékonyság elemzés, 
\end_layout

\begin_layout Section
Továbbfejlesztési lehetőségek
\end_layout

\begin_layout Standard
limitációk, ToDo-k, tervezett módosítások összegzése.
\end_layout

\begin_layout Chapter
Összefoglalás
\end_layout

\begin_layout Chapter
\start_of_appendix
Használt eszközök a fejlesztés során
\end_layout

\begin_layout Standard
\begin_inset Newpage cleardoublepage
\end_inset


\end_layout

\begin_layout Standard

\lang english
\begin_inset CommandInset index_print
LatexCommand printindex
type "idx"

\end_inset


\end_layout

\end_body
\end_document
